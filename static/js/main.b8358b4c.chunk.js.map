{"version":3,"sources":["Components/GoodsList/GoodsList.js","Components/ButtonsList/ButtonsList.js","api/goodsFromServer.js","Components/SortingSection/SortingSection.js","Components/StartButton/StartButton.js","App.js","index.js"],"names":["GoodsList","goodItems","list","map","item","index","key","ButtonsList","state","props","goodsList","handleClick","setState","reverse","handleSortLength","sortedByLength","sort","a","b","length","handleSortAlphabetically","handleReset","handleSelectChange","itemId","goodIndex","items","slice","prevState","goodsArr","this","type","onClick","onChange","event","target","value","React","Component","goodsFromServer","SortingSection","StartButton","buttonVisible","App","className","ReactDOM","render","document","getElementById"],"mappings":"sNAoBeA,EAjBG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KAGnB,OACE,4BACGD,EAAUE,KAAI,SAACC,EAAMC,GAAP,OAEb,wBAAIC,IAAKD,GAAQD,QCgFVG,E,2MArFbC,MAAQ,CACNN,KAAM,EAAKO,MAAMC,W,EAGnBC,YAAc,WACZ,EAAKC,SAAS,CAAEV,KAAM,EAAKO,MAAMC,UAAUG,a,EAG7CC,iBAAmB,WAEjB,IAAMC,EAAiB,YAAI,EAAKN,MAAMC,WAAWM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE7E,EAAKP,SAAS,CAAEV,KAAMa,K,EAGxBK,yBAA2B,WACzB,EAAKR,SAAS,CAAEV,KAAM,YAAI,EAAKO,MAAMC,WAAWM,U,EAGlDK,YAAc,WACZ,EAAKT,SAAS,CAAEV,KAAM,EAAKO,MAAMC,a,EAGnCY,mBAAqB,SAACC,GACpB,IAAMC,GAAaD,EAAS,EACtBE,EAAQ,YAAI,EAAKjB,MAAMN,MAAMwB,MAAM,EAAGF,GAE5C,EAAKZ,UAAS,SAAAe,GAAS,MAAK,CAAEzB,KAAMuB,O,wEAG5B,IAAD,OACDG,EAAWC,KAAKrB,MAAMN,KAE5B,OACE,oCACE,4BACE4B,KAAK,SACLC,QAASF,KAAKlB,aAFhB,WAOA,4BACEmB,KAAK,SACLC,QAASF,KAAKf,kBAFhB,kBAOA,4BACEgB,KAAK,SACLC,QAASF,KAAKT,0BAFhB,uBAOA,4BACEU,KAAK,SACLC,QAASF,KAAKR,aAFhB,SAOA,4BAAQW,SAAU,SAAAC,GAAK,OAAI,EAAKX,mBAAmBW,EAAMC,OAAOC,SAC7DP,EAASzB,KAAI,SAACC,EAAMC,GAAP,OACZ,4BAEEC,IAAKD,EACL8B,MAAO9B,GAENA,EAAQ,OAKf,kBAAC,EAAD,CAAWH,KAAM2B,KAAKrB,MAAMN,Y,GA5EVkC,IAAMC,WCSjBC,EAbS,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UCAaC,EANQ,kBACrB,6BACE,kBAAC,EAAD,CAAa7B,UAAW4B,MCmBbE,E,2MArBXhC,MAAQ,CACNiC,eAAe,G,EAGjB9B,YAAc,WACZ,EAAKC,SAAS,CACZ6B,eAAe,K,wEAKjB,OACE,oCACGZ,KAAKrB,MAAMiC,cACR,4BAAQX,KAAK,SAASC,QAASF,KAAKlB,aAApC,SACA,kBAAC,EAAD,W,GAhBYyB,IAAMC,WCOjBK,EAPH,kBACV,yBAAKC,UAAU,OACb,qCACA,kBAAC,EAAD,QCFJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b8358b4c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodsList = ({ list }) => {\n  const goodItems = list;\n\n  return (\n    <ul>\n      {goodItems.map((item, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n\nGoodsList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GoodsList from '../GoodsList/GoodsList';\n\nclass ButtonsList extends React.Component {\n  state = {\n    list: this.props.goodsList,\n  };\n\n  handleClick = () => {\n    this.setState({ list: this.props.goodsList.reverse() });\n  }\n\n  handleSortLength = () => {\n    // eslint-disable-next-line max-len\n    const sortedByLength = [...this.props.goodsList].sort((a, b) => a.length - b.length);\n\n    this.setState({ list: sortedByLength });\n  }\n\n  handleSortAlphabetically = () => {\n    this.setState({ list: [...this.props.goodsList].sort() });\n  }\n\n  handleReset = () => {\n    this.setState({ list: this.props.goodsList });\n  }\n\n  handleSelectChange = (itemId) => {\n    const goodIndex = +itemId + 1;\n    const items = [...this.state.list].slice(0, goodIndex);\n\n    this.setState(prevState => ({ list: items }));\n  }\n\n  render() {\n    const goodsArr = this.state.list;\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.handleClick}\n        >\n        Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.handleSortLength}\n        >\n        Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.handleSortAlphabetically}\n        >\n        Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.handleReset}\n        >\n        Reset\n        </button>\n\n        <select onChange={event => this.handleSelectChange(event.target.value)}>\n          {goodsArr.map((item, index) => (\n            <option\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              value={index}\n            >\n              {index + 1}\n            </option>\n          ))}\n        </select>\n\n        <GoodsList list={this.state.list} />\n      </>\n    );\n  }\n}\n\nButtonsList.propTypes = {\n  goodsList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ButtonsList;\n","const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport default goodsFromServer;\n","import React from 'react';\nimport ButtonsList from '../ButtonsList/ButtonsList';\nimport goodsFromServer from '../../api/goodsFromServer';\n\nconst SortingSection = () => (\n  <div>\n    <ButtonsList goodsList={goodsFromServer} />\n  </div>\n);\n\nexport default SortingSection;\n","import React from 'react';\nimport SortingSection from '../SortingSection/SortingSection';\n\nclass StartButton extends React.Component {\n    state = {\n      buttonVisible: true,\n    }\n\n    handleClick = () => {\n      this.setState({\n        buttonVisible: false,\n      });\n    }\n\n    render() {\n      return (\n        <>\n          {this.state.buttonVisible\n            ? <button type=\"button\" onClick={this.handleClick}>Start</button>\n            : <SortingSection />}\n        </>\n      );\n    }\n}\n\nexport default StartButton;\n","import React from 'react';\nimport StartButton from './Components/StartButton/StartButton';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <StartButton />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}